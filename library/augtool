#!/usr/bin/env python
#
# Copyright 2013 Dale Sedivec
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


DOCUMENTATION = '''
module: augtool
short_description: Modifies configuration files using Augeas
description:
  - Uses the augtool utility to modify configuration files through the
    Augeas library.
author: Dale Sedivec <dale@codefu.org>
requirements:
  - augtool
options:
  commands:
    description:
      - Either a list of augtool commands, or else a newline-separated
        list of commands
    required: true
  autoload:
    description:
      - Should augtool load lenses by default or it will be provided
        as one of commands (or it will fail misserably :) )
    required: false
    choices: [yes, no]
    default: yes
  backup:
    description:
      - Whether or not to make a backup of the files changed (passes
        C(--backup) to augtool)
    required: false
    choices: [yes, no]
    default: yes
notes:
  - Unfortunately, this module really has no idempotency itself.  It's
    up to you to write idempotent augtool scripts.  Thankfully, that's
    pretty easy to do.
'''

EXAMPLES = '''
# YAML gives us a nice way of providing multiple augtool commands,
# separated by newlines.
#
# I'm escaping the $'s so Ansible doesn't eat them and augtool sees them.
action: augtool
args:
  commands: |
    defvar vsftpd /files/etc/vsftpd/vsftpd.conf
    set \$vsftpd/xferlog_std_format NO
    set \$vsftpd/log_ftp_protocol YES

# do backup, and do not autoload all lenses just specific for dovecot
# this will speed up augtool tenfold
action: augtool
args:
  backup: true
  autoload: false
  commands: |
    set /augeas/load/Dovecot/lens Dovecot.lns
    set /augeas/load/Dovecot/incl /etc/dovecot/conf.d/10-master.conf
    load
    rm /files/etc/dovecot/conf.d/10-master.conf/service[8]/
    save

# Or provide the commands as a list.
action: augtool
args:
  commands:
    - rm /files/etc/mdadm.conf/array[uuid = "{{ uuid }}"]
    - rm /files/etc/fstab/*[file = "/srv/storage/storage1"]

# Or provide the commands from a template.
action: augtool
args:
  commands: {{ lookup('template', 'samba.augtool.j2') }}
'''

# This uses the augtool program rather than any Augeas Python bindings
# because CentOS doesn't come with Augeas Python bindings (though EPEL
# does).  Using augtool was ultimately easier, too.  Finally, I
# couldn't see any way to find out how many files were changed through
# the Augeas API, though it's presumably possible since augtool does
# it.


import re


def main():
    module = AnsibleModule(
        argument_spec=dict(
            commands=dict(required=True),
            backup=dict(type='bool', default=True),
            autoload=dict(type='bool', default=True)
            ),
        supports_check_mode=True,
        )

    params = module.params
    commands = params["commands"]
    if isinstance(commands, list):
        commands = "\n".join(commands)
    backup = module.boolean(params["backup"])
    autoload = module.boolean(params["autoload"])

    cmd = ["augtool"]
    if backup:
        cmd.append("--backup")
    if not autoload:
        cmd.append("--noautoload")
    if module.check_mode:
        commands += "\nset /augeas/save noop"
    commands += "\nsave\nprint /augeas//error\n"
    # binary_data=True is a workaround because otherwise run_command
    # will add r'\n' to stdin.
    # https://github.com/ansible/ansible/pull/6084
    status, out, err = module.run_command(cmd, data=commands, binary_data=True)
    if status != 0:
        module.fail_json(rc=status, msg="augtool errors:\n" + err)
    else:
        changed = bool(re.search(r"(^|\n)Saved \d+ file\(s\)\s*$", out))
        module.exit_json(changed=changed, rc=status, msg=out, stderr=err)


# include magic from lib/ansible/module_common.py
#<<INCLUDE_ANSIBLE_MODULE_COMMON>>
main()
